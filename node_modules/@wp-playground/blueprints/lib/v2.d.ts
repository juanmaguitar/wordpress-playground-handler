import type { UniversalPHP } from '@php-wasm/universal';
import type { BlueprintDeclaration } from './blueprint';
interface RunV2Options {
    php: UniversalPHP;
    blueprint: BlueprintV2Declaration | ParsedBlueprintV2Declaration;
    siteUrl: string;
    documentRoot: string;
    hooks?: {
        afterBlueprintTargetResolved?: (php: UniversalPHP) => void | Promise<void>;
        beforeWordPressFiles?: (php: UniversalPHP) => void | Promise<void>;
        onProgress?: (progress: number, caption: string) => void;
        /**
         * A hook that is called when an error occurs. It provides succinct
         * error messages and structured details. Useful for reporting specific
         * errors to the user without displaying the full stack trace.
         *
         * @param message The error message.
         * @param details The error details.
         */
        onError?: (message: string, details?: PHPExceptionDetails) => void;
    };
}
export type PHPExceptionDetails = {
    exception: string;
    message: string;
    file: string;
    line: number;
    trace: string;
};
export declare function runBlueprintV2(options: RunV2Options): Promise<any>;
export type BlueprintV2Declaration = string | BlueprintDeclaration | undefined;
export type ParsedBlueprintV2Declaration = {
    type: 'inline-file';
    contents: string;
} | {
    type: 'file-reference';
    reference: string;
};
export declare function parseBlueprintDeclaration(source: BlueprintV2Declaration | ParsedBlueprintV2Declaration): ParsedBlueprintV2Declaration;
export declare function getV2Runner(): Promise<File>;
export {};
