import type { SupportedPHPVersion } from '@php-wasm/universal';
import { PHPWorker } from '@php-wasm/universal';
import { EmscriptenDownloadMonitor } from '@php-wasm/progress';
export interface Mount {
    hostPath: string;
    vfsPath: string;
}
export type PrimaryWorkerBootOptions = {
    wpVersion?: string;
    phpVersion?: SupportedPHPVersion;
    absoluteUrl: string;
    mountsBeforeWpInstall: Array<Mount>;
    mountsAfterWpInstall: Array<Mount>;
    wordPressZip?: ArrayBuffer;
    sqliteIntegrationPluginZip?: ArrayBuffer;
    firstProcessId: number;
    processIdSpaceLength: number;
    dataSqlPath?: string;
    followSymlinks: boolean;
    trace: boolean;
};
export declare class PlaygroundCliWorker extends PHPWorker {
    booted: boolean;
    constructor(monitor: EmscriptenDownloadMonitor);
    boot({ absoluteUrl, mountsBeforeWpInstall, mountsAfterWpInstall, phpVersion, wordPressZip, sqliteIntegrationPluginZip, firstProcessId, processIdSpaceLength, dataSqlPath, followSymlinks, trace, }: PrimaryWorkerBootOptions): Promise<void>;
    dispose(): Promise<void>;
}
