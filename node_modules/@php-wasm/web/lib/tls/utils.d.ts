export declare function flipObject(obj: Record<any, any>): any;
export declare function as2Bytes(value: number): Uint8Array;
export declare function as3Bytes(value: number): Uint8Array;
export declare function as8Bytes(value: number): Uint8Array;
export declare class ArrayBufferReader {
    private view;
    offset: number;
    private buffer;
    constructor(buffer: ArrayBuffer);
    readUint8(): number;
    readUint16(): number;
    readUint32(): number;
    readUint8Array(length: number): Uint8Array;
    isFinished(): boolean;
}
export declare class ArrayBufferWriter {
    buffer: ArrayBuffer;
    view: DataView;
    uint8Array: Uint8Array;
    private offset;
    constructor(length: number);
    writeUint8(value: number): void;
    writeUint16(value: number): void;
    writeUint32(value: number): void;
    writeUint8Array(value: Uint8Array): void;
}
