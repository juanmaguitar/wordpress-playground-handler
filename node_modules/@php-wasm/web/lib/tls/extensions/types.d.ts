/**
 * IANA maintains a list of TLS extensions here:
 * https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml
 */
export declare const ExtensionTypes: {
    readonly server_name: 0;
    readonly max_fragment_length: 1;
    readonly client_certificate_url: 2;
    readonly trusted_ca_keys: 3;
    readonly truncated_hmac: 4;
    readonly status_request: 5;
    readonly user_mapping: 6;
    readonly client_authz: 7;
    readonly server_authz: 8;
    readonly cert_type: 9;
    readonly supported_groups: 10;
    readonly ec_point_formats: 11;
    readonly srp: 12;
    readonly signature_algorithms: 13;
    readonly use_srtp: 14;
    readonly heartbeat: 15;
    readonly application_layer_protocol_negotiation: 16;
    readonly status_request_v2: 17;
    readonly signed_certificate_timestamp: 18;
    readonly client_certificate_type: 19;
    readonly server_certificate_type: 20;
    readonly padding: 21;
    readonly encrypt_then_mac: 22;
    readonly extended_master_secret: 23;
    readonly token_binding: 24;
    readonly cached_info: 25;
    readonly tls_its: 26;
    readonly compress_certificate: 27;
    readonly record_size_limit: 28;
    readonly pwd_protect: 29;
    readonly pwo_clear: 30;
    readonly password_salt: 31;
    readonly ticket_pinning: 32;
    readonly tls_cert_with_extern_psk: 33;
    readonly delegated_credential: 34;
    readonly session_ticket: 35;
    readonly TLMSP: 36;
    readonly TLMSP_proxying: 37;
    readonly TLMSP_delegate: 38;
    readonly supported_ekt_ciphers: 39;
    readonly pre_shared_key: 41;
    readonly early_data: 42;
    readonly supported_versions: 43;
    readonly cookie: 44;
    readonly psk_key_exchange_modes: 45;
    readonly reserved: 46;
    readonly certificate_authorities: 47;
    readonly oid_filters: 48;
    readonly post_handshake_auth: 49;
    readonly signature_algorithms_cert: 50;
    readonly key_share: 51;
    readonly transparency_info: 52;
    readonly connection_id: 54;
};
export type ExtensionType = keyof typeof ExtensionTypes;
export declare const ExtensionNames: any;
export type ExtensionName = keyof typeof ExtensionNames;
