/// <reference types="node" resolution-mode="require"/>
/// <reference types="node" resolution-mode="require"/>
import { Readable } from 'node:stream';
export type TCodeRef = {
    type: string;
    value: string;
    index: number;
};
export type TOptsNormalized = {
    comments: boolean;
    bufferSize: number;
    re: RegExp;
    offset: number;
};
export type TOpts = Partial<TOptsNormalized>;
export declare const fullRe: RegExp;
export declare const importRe: RegExp;
export declare const importRequireRe: RegExp;
export declare const requireRe: RegExp;
export declare const requireResolveRe: RegExp;
export declare const depseek: (stream: Readable | string | Buffer, opts?: TOpts) => Promise<TCodeRef[]>;
export declare const depseekSync: (input: string | Buffer, opts?: TOpts) => TCodeRef[];
export declare const patchRefs: (contents: string | Buffer, patcher: (ref: string) => string) => string;
