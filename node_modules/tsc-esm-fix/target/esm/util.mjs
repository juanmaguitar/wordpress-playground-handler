import fse from 'fs-extra';
import json5 from 'json5';
import { populateSync } from '@topoconfig/extends';
export { default as glob } from 'fast-glob';
export { existsSync } from 'node:fs';
export const read = (file) => fse.readFileSync(file, { encoding: 'utf8' });
export const write = (file, contents) => fse.outputFileSync(file, contents, { encoding: 'utf8' });
export const readJson = (file) => json5.parse(read(file));
export const asArray = (value) => value ? (Array.isArray(value) ? value : [value]) : [];
export const remove = fse.unlinkSync;
export const unixify = (path) => path.replace(/\\/g, '/');
export const resolveTsConfig = (file) => populateSync(file, {
    parse({ contents, ext }) {
        if (ext === '.json')
            return json5.parse(contents);
        throw new Error(`Unsupported format: ${ext}`);
    },
    rules: {
        compilerOptions: 'merge'
    }
});
export const omitUndefinedKeys = (obj) => Object.fromEntries(Object.entries(obj).filter(([, value]) => value !== undefined));
export const extToGlob = (ext) => `**/*.{${ext.map(e => e.slice(1)).join(',')}}`;
